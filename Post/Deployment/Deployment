배포하기 전에 package.json에서 2개의 명령어를 더 설정해주어야 한다.

1. build
이 명령어가 내 어플리케이션을 실제로 production용으로 만들어 줄 것이다.
"build" : "next build"

2. start
이 명령어는 어플리케이션을 production 모드로 시작해줄것이다.
"start" : "next start"


-----------------------

주의할 점으로 이대로 배포를 진행하다보면 빌드 과정에서 Type error: Page "app/(home)/page.tsx" does not match the required types of a Next.js Page.
  "URL" is not a valid Page export field. 라고 하면서 API URL을 export 할 수 없다고 에러가 발생하는데
당연하게도 page.tsx에서는 아무거나 export 할 수 없다.
오직 허용된 것들만 export 할 수 있다.

그래서 URL 변수를 새로운 constants 파일로 옮겨 줄 것이다.

-----------------------

이번에 해볼건 내 링크에 prefetch를 추가하는 것이다.

movie 컴포넌트를 보면 Link component가 있는데 여기에 prefetch를 추가해줄 것이다.
<Link prefetch href={`/movies/${id}`}>{title}</Link>

이전엔 캐싱되어 있는 영화 페이지가 아니라 처음 접속하는 페이지를 들어가보면
비디오를 불러오는데 꽤 시간이 걸리는 것을 볼 수 있다.

그러나 위처럼 Link 컴포넌트에 prefetch를 추가함으로서 페이지에 도착하는 순간 추가한 prefetch라는 prop 때문에
Next.js는 페이지들을 미리 로드하게 된다!!

즉, Next.js는 사용자가 클릭하기 전부터 fetch를 하게 된다.
network 탭에서보면 Next.js가 movie 페이지를 자동으로 fetch하고 있는 것을 볼 수 있다.
유저는 클릭하지 않았는데도 마치 해당 링크를 클릭한 것처럼 요청하고 있는 것이다.

그러나 모든 페이지를 prefetch하는 것은 좋은 방법이 아니다. 데이터베이스에 과부하를 걸 수 있기 때문이다.


Link Props (prefetch)
prefecth은 Link 컴포넌트가 사용자의 뷰포트에 들어갈 때(초기 또는 스크롤을 통해) 발생합니다.
Next.js는 연결된 경로(href로 표시됨)와 데이터를 백그라운드에서 prefetch 및 load하여 클라이언트 측 네비게이션 성능을 향상시킵니다.
prefecth는 프로덕션에서만 활성화됩니다. (기본값 true)